{%- set coremap={'noetic':'core20', 'foxy':'core20', 'humble':'core22', 'jazzy':'core24'} -%}
{%- set distromap={'noetic':'focal', 'foxy':'focal', 'humble':'jammy', 'jazzy':'noble'} -%}
{%- set pluginmap={'noetic':'catkin', 'foxy':'colcon', 'humble':'colcon', 'jazzy':'colcon'} -%}
{%- set versionmap={'noetic':'1', 'foxy':'2', 'humble':'2', 'jazzy': '2'} -%}
{%- set slotmap={
  'noetic':["ros-core", "ros-base", "robot", "desktop"],
  'foxy':["ros-core", "ros-base", "desktop"],
  'humble':["ros-core", "ros-base", "desktop"],
  'jazzy':["ros-core", "ros-base", "desktop"],
  }
-%}
{%- set ros = 'ros' if versionmap[ros_distro] == '1' else 'ros2' -%}
{%- set devsuffix = '-dev' if dev is defined and dev | bool else '' -%}
{%- set snapname = "ros-" + ros_distro + "-" + variant + devsuffix -%}

name: {{ snapname }}
version: '0.1'
summary: The ROS {{ versionmap[ros_distro] }} {{ ros_distro }} {{ variant }} variant.
description: |
  This snap contains the ROS {{ versionmap[ros_distro] }} {{ ros_distro }} {{ variant }} variant [1].

  It provides the ROS {{ versionmap[ros_distro] }} {{ ros_distro }} stack to other snaps to that use it. \
  It shares the ROS {{ versionmap[ros_distro] }} {{ ros_distro }} libraries, components and executables
  through the content interface.
  This helps reduce the size of snaps and helps developers to easily snap ROS {{ versionmap[ros_distro] }} {{ ros_distro }} applications.

  *For users*

  This snap is automatically installed and removed when needed. \
  Manually adding or removing this snap is not recommended and might break things.

  If you are having issues with snaps using ROS, please contact the experts on the Snapcraft forum [2].

  *For developers*

  The `ros` extensions are the recommended way to use this in your own snap [3]. \
  Find out how to do so in the documentation [4]. \
  You can report issues with this content snap on GitHub [5] where the source code is available [6]. \

{% if versionmap[ros_distro] == '1' %}
  [1] https://ros.org/reps/rep-0150.html
{% else %}
  [1] https://ros.org/reps/rep-2001.html
{% endif %}
  [2] https://forum.snapcraft.io/ \
  [3] https://snapcraft.io/docs/supported-extensions \
  [4] https://ubuntu.com/robotics/docs/ros-deployment-with-snaps-part-4 \
  [5] https://github.com/ubuntu-robotics/ros-content-sharing-snaps/issues \
  [6] https://github.com/ubuntu-robotics/ros-content-sharing-snaps
  
  ROS {{ ros_distro }} logo is a trademark of Open Source Robotics Foundation.

grade: stable
confinement: strict
base: {{ coremap[ros_distro] }}

# Add ROS repository
package-repositories:
  - components: [main]
    formats: [deb]
    key-id: C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
    key-server: keyserver.ubuntu.com
    suites: [{{ distromap[ros_distro] }}]
    type: apt
{%- if versionmap[ros_distro] == '1' %}
    url: http://packages.ros.org/ros/ubuntu
{%- else %}
    url: http://packages.ros.org/ros2/ubuntu
{%- endif %}

{%- if coremap[ros_distro] == "core24" %}
platforms:
  {{ architecture }}:
    build-on: [{{ architecture }}]
    build-for: [{{ architecture }}]
{%- else %}
architectures:
  - build-on: {{ architecture }}
{%- endif %}

{% if dev is not defined or not dev | bool -%}
slots:
{%- for slot in slotmap[ros_distro][:slotmap[ros_distro].index(variant)+1] %}
  {{ "ros-" + ros_distro + "-" + slot}}:
    content: {{ "ros-" + ros_distro + "-" + slot}}
    interface: content
    read: [/]
{%- endfor -%}
{%- endif %}

parts:
{%- if dev is defined and dev | bool %}
  variant:
    plugin: {{ pluginmap[ros_distro] }}
    source: .
{%- if versionmap[ros_distro] == '1' %}
    build-packages: [ros-{{ ros_distro }}-catkin]
{%- else %}
    build-packages:
      - ros-{{ ros_distro }}-ros-environment
      - ros-{{ ros_distro }}-ros-workspace
      - ros-{{ ros_distro }}-ament-index-cpp
      - ros-{{ ros_distro }}-ament-index-python
{%- endif %}
    build-environment:
      - ROS_DISTRO: {{ ros_distro }}
      - ROS_VERSION: '{{ versionmap[ros_distro] }}'
    override-build: |
      python3 $SNAPCRAFT_PART_SRC/generate_package_xml_recursive_dependencies.py --variant {{ variant }} --rosdistro $ROS_DISTRO --output-file $SNAPCRAFT_PART_SRC/package.xml --cmake-file $SNAPCRAFT_PART_SRC/CMakeLists.txt
{% if coremap[ros_distro] == 'core20' %}
      snapcraftctl build
{% else %}
      craftctl default
{%- endif %}
{%- if versionmap[ros_distro] == '1' %}
      find "${SNAPCRAFT_PART_INSTALL}/opt/ros/${ROS_DISTRO}/share/" \( -name "*Config.cmake" -o -name "*extras.cmake" \) -exec \
        sed -i -e "s|/opt|/snap/{{ snapname }}/current&|g" -e "s|/usr|/snap/{{ snapname }}/current&|g" \
        -e "s|\${% raw %}{{.*_DIR}}{% endraw %}/../../..|/snap/{{ snapname }}/current/opt/ros/${ROS_DISTRO}|g" {} \;
{%- endif %}
{% else %}
  variant:
    plugin: nil
    stage-packages: [ros-{{ ros_distro }}-{{ variant | replace("_", "-") }}]
    # deb's update-alternatives are not run in snapcraft,
    # thus these libraries symlinks aren't create in lib/arch/.
    # We do so manually here for those two libraries that are very common in ROS.
    override-build: |
{% if coremap[ros_distro] == 'core20' %}
      snapcraftctl build

      if [ -f "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/blas/libblas.so.3."* ]; then
        ln --symbolic --force --relative "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/blas/libblas.so.3."* "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/libblas.so.3"
      fi

      if [ -f "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/lapack/liblapack.so.3."* ]; then
        ln --symbolic --force --relative "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/lapack/liblapack.so.3."* "${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/liblapack.so.3"
      fi
{% else %}
      craftctl default

      if [ -f "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/blas/libblas.so.3."* ]; then
        ln --symbolic --force --relative "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/blas/libblas.so.3."* "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/libblas.so.3"
      fi

      if [ -f "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/lapack/liblapack.so.3."* ]; then
        ln --symbolic --force --relative "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/lapack/liblapack.so.3."* "${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/liblapack.so.3"
      fi
{% endif %}
  cleanup:
    after: [variant]
    build-packages: [fd-find]
    plugin: nil
    source: https://github.com/ubuntu-robotics/snapcraft-ros-clean.git
    build-environment:
      - ROS_DISTRO: {{ ros_distro }}
    override-prime: |
{% if coremap[ros_distro] == 'core20' %}
      snapcraftctl prime
{% else %}
      craftctl default
{% endif %}
{%- if versionmap[ros_distro] == '1' %}
      $SNAPCRAFT_PART_SRC/scripts/clean_ROS_debs.sh
{% else %}
      $SNAPCRAFT_PART_SRC/scripts/clean_ROS_2_debs.sh
{% endif %}
      $SNAPCRAFT_PART_SRC/scripts/clean_files.sh
{% endif %}
{% if ros_distro == 'humble' and variant == 'desktop' %}
  humble-desktop-java-cleanup:
    # https://forum.snapcraft.io/t/resolve-package-contains-external-symlinks-error-when-trying-to-snap/2963/20
    after: [variant]
    plugin: nil
    build-packages: [openjdk-17-jre-headless, ca-certificates-java, ca-certificates]
    override-prime: |
      rm -vf usr/lib/jvm/java-11-openjdk-*/lib/security/blacklisted.certs
{% endif %}
{% if ros_distro == 'jazzy' and variant == 'desktop' %}
  jazzy-desktop-libamdhip-exec-stack:
    # https://github.com/ROCm/clr/issues/22
    after: [variant]
    plugin: nil
    build-packages: [execstack]
    override-prime: |
      # try remove execstack on libamdhip
      amdlib="usr/lib/x86_64-linux-gnu/libamdhip64.so.5"
      if [ -f $amdlib ]; then
        execstack -c $(readlink -f $amdlib)
      fi
{% endif %}
